version: '3'

networks:
  app-tier:
    driver: bridge


services:
  db:
    image: postgres
    restart: always
    build:
      context: .
      dockerfile: ./pg_init/Dockerfile
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/posgresql/data/
    networks:
      - app-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-tier

  redis_api:
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-tier

  rabbit:
    image: "rabbitmq:3-management"
    hostname: rabbit
    environment:
      RABBITMQ_ERLANG_COOKIE: "TESTVOLUME"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - app-tier
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./rabbitmq/logs:/var/log/rabbitmq/log

  mail:
    image: bytemark/smtp
    restart: always
    environment:
      RELAY_HOST: smtp.yandex.ru
      RELAY_PORT: 587
      RELAY_USERNAME: username
      RELAY_PASSWORD: password
    networks:
      - app-tier

  celery-flower:
    image: gregsi/latest-celery-flower-docker:latest
    environment:
      - AMQP_USERNAME=guest
      - AMQP_PASSWORD=guest
      - AMQP_HOST=rabbit
      - AMQP_PORT=5672
      - AMQP_ADMIN_HOST=rabbit
      - AMQP_ADMIN_PORT=15672
      - FLOWER_BASIC_AUTH=user:test
    ports:
      - "5555:5555"
    depends_on:
      - rabbit
      - db
    networks:
      - app-tier
  
  goods:
    build: goods/
    command: bash -c "python3 goods/manage.py makemigrations && python3 goods/manage.py migrate && python3 goods/manage.py loaddata tag.json && python3 goods/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    networks:
      - app-tier

  user_service:
    build: ./user_service
    command: bash -c "python3 user_service/app/server.py && alembic upgrade head"
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    networks:
      - app-tier

  messages:
    build: ./messages
    command: bash -c "uvicorn messages.app.asgi:app --reload --host 0.0.0.0 --port 8008"
    volumes:
      - .:/code
    depends_on:
      - db
    networks:
      - app-tier

  monitor_service:
    build: ./monitor_service
    command: bash -c "uvicorn monitor_service.app.asgi:app --reload --host 0.0.0.0 --port 8888"
    volumes:
      - .:/code
    depends_on:
      - db
      - rabbit
      - worker
    networks:
      - app-tier

  worker:
    build:
      context: ./monitor_service
      dockerfile: ./celery.Dockerfile
    depends_on:
      - rabbit
      - db
    networks:
      - app-tier

  api:
    build: ./API
    command: bash -c "uvicorn API.app.asgi:app --reload --host 0.0.0.0 --port 7777"
    volumes:
      - .:/code
    ports:
      - "7777:7777"
    networks:
      - app-tier

volumes:
  rabbit:
    driver: local
  postgres_data: